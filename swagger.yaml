openapi: 3.0.3
info:
  title: Swagger docker-browser
  description: |-
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://127.0.0.1:8080
tags:
  - name: screenshot
  - name: content
  - name: pdf
paths:
  /chromium/screenshot:
    post:
      tags:
        - screenshot
      # summary: Update an existing pet
      # description: Update an existing pet by Id
      operationId: getChromiumScreenshot
      requestBody:
        # description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreenshotRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
  /firefox/screenshot:
    post:
      tags:
        - screenshot
      # summary: Update an existing pet
      # description: Update an existing pet by Id
      operationId: getFirefoxScreenshot
      requestBody:
        # description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreenshotRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
  /webkit/screenshot:
    post:
      tags:
        - screenshot
      # summary: Update an existing pet
      # description: Update an existing pet by Id
      operationId: getWebkitScreenshot
      requestBody:
        # description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreenshotRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
  /chromium/content:
    post:
      tags:
        - content
      operationId: getChromiumContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            text/html:
              schema:
                type: string
  /firefox/content:
    post:
      tags:
        - content
      operationId: getFirefoxContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            text/html:
              schema:
                type: string
  /webkit/content:
    post:
      tags:
        - content
      operationId: getWebkitContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            text/html:
              schema:
                type: string
  /chromium/content/extra:
    post:
      tags:
        - content
      operationId: getChromiumContentExtra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentExtraResponse"
  /firefox/content/extra:
    post:
      tags:
        - content
      operationId: getFirefoxContentExtra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentExtraResponse"
  /webkit/content/extra:
    post:
      tags:
        - content
      operationId: getWebkitContentExtra
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentExtraResponse"
  /chromium/pdf:
    post:
      tags:
        - pdf
      operationId: getChromiumPdf
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PdfRequest"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  /info:
    get:
      operationId: getInfo
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoResponse"
  /devices:
    get:
      operationId: getDevices
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Device"
  /swagger:
    get:
      operationId: getSwagger
      responses:
        "200":
          description: ""
          content:
            text/yaml:
              schema:
                type: string
components:
  schemas:
    GotoOptions:
      type: object
      properties:
        referer:
          description: |-
            Referer header value. If provided it will take preference over the referer header value set by
            [page.setExtraHTTPHeaders(headers)](https://playwright.dev/docs/api/class-page#page-set-extra-http-headers).
          type: string
        timeout:
          type: number
          description: |-
            Maximum operation time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via
            `navigationTimeout` option in the config, or by using the
            [browserContext.setDefaultNavigationTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout),
            [browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout),
            [page.setDefaultNavigationTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-navigation-timeout)
            or [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods.
          default: 0
        waitUntil:
          type: string
          enum: ["load", "domcontentloaded", "networkidle", "commit"]
          description: |-
            When to consider operation succeeded, defaults to `load`. Events can be either:
            - `'domcontentloaded'` - consider operation to be finished when the `DOMContentLoaded` event is fired.
            - `'load'` - consider operation to be finished when the `load` event is fired.
            - `'networkidle'` - **DISCOURAGED** consider operation to be finished when there are no network connections for
              at least `500` ms. Don't use this method for testing, rely on web assertions to assess readiness instead.
            - `'commit'` - consider operation to be finished when network response is received and the document started
              loading.
          default: "load"
    ContextOptions:
      type: object
      properties:
        # acceptDownloads?: boolean;
        # baseURL?: string;
        bypassCSP:
          type: boolean
          description: |-
            Toggles bypassing page's Content-Security-Policy. Defaults to `false`.
          default: false
        colorScheme:
          type: string
          enum: ["light", "dark", "no-preference"]
          description: |-
            Emulates `'prefers-colors-scheme'` media feature, supported values are `'light'`, `'dark'`, `'no-preference'`. See
            [page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.
            Passing `null` resets emulation to system defaults. Defaults to `'light'`.
          default: "light"
        deviceScaleFactor:
          type: number
          description: |-
            Specify device scale factor (can be thought of as dpr). Defaults to `1`. Learn more about
            [emulating devices with device scale factor](https://playwright.dev/docs/emulation#devices).
        extraHTTPHeaders:
          type: object
          description: |-
            An object containing additional HTTP headers to be sent with every request. Defaults to none.
        forcedColors:
          type: string
          enum: ["active", "none"]
          description: |-
            Emulates `'forced-colors'` media feature, supported values are `'active'`, `'none'`. See
            [page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.
            Passing `null` resets emulation to system defaults. Defaults to `'none'`.
          default: "none"
        geolocation:
          type: object
          properties:
            latitude:
              type: number
              description: |-
                Latitude between -90 and 90.
              minimum: -90
              maximum: 90
            longitude:
              type: number
              description: |-
                Longitude between -180 and 180.
              minimum: -180
              maximum: 180
            accuracy:
              type: number
              description: |-
                Non-negative accuracy value. Defaults to `0`.
              default: 0
          required:
            - latitude
            - longitude
            - accuracy
        hasTouch:
          type: boolean
          description: |-
            Specifies if viewport supports touch events. Defaults to false. Learn more about
            [mobile emulation](https://playwright.dev/docs/emulation#devices).
        httpCredentials:
          type: object
          properties:
            username:
              type: string
            password:
              type: string
            origin:
              type: string
              description: |-
                Restrain sending http credentials on specific origin (scheme://host:port).
          required:
            - username
            - password
          description: |-
            Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no
            origin is specified, the username and password are sent to any servers upon unauthorized responses.
        ignoreHTTPSErrors:
          type: boolean
          description: |-
            Whether to ignore HTTPS errors when sending network requests. Defaults to `false`.
          default: false
        isMobile:
          type: boolean
          description: |-
            Whether the `meta viewport` tag is taken into account and touch events are enabled. isMobile is a part of device,
            so you don't actually need to set it manually. Defaults to `false` and is not supported in Firefox. Learn more
            about [mobile emulation](https://playwright.dev/docs/emulation#ismobile).
          default: false
        javaScriptEnabled:
          type: boolean
          description: |-
            Whether or not to enable JavaScript in the context. Defaults to `true`. Learn more about
            [disabling JavaScript](https://playwright.dev/docs/emulation#javascript-enabled).
          default: true
        locale:
          type: string
          description:
            Specify user locale, for example `en-GB`, `de-DE`, etc. Locale will affect `navigator.language` value,
            `Accept-Language` request header value as well as number and date formatting rules. Defaults to the system default
            locale. Learn more about emulation in our [emulation guide](https://playwright.dev/docs/emulation#locale--timezone).
        # logger?: Logger;
        offline:
          type: boolean
          description: |-
            Whether to emulate network being offline. Defaults to `false`. Learn more about
            [network emulation](https://playwright.dev/docs/emulation#offline).
          default: false
        permissions:
          type: array
          items:
            type: string
          description: |-
            A list of permissions to grant to all pages in this context. See
            [browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)
            for more details. Defaults to none.
        # proxy?: {
        # recordHar?: {
        # recordVideo?: {
        reducedMotion:
          type: string
          enum: ["reduce", "no-preference"]
          description: |-
            Emulates `'prefers-reduced-motion'` media feature, supported values are `'reduce'`, `'no-preference'`. See
            [page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.
            Passing `null` resets emulation to system defaults. Defaults to `'no-preference'`.
          default: "no-preference"
        screen:
          type: object
          properties:
            width:
              type: number
              description: |-
                page width in pixels.
            height:
              type: number
              description: |-
                page height in pixels.
          required:
            - width
            - height
          description: |-
            Emulates consistent window screen size available inside web page via `window.screen`. Is only used when the
            `viewport` is set.
        serviceWorkers:
          type: string
          enum: ["allow", "block"]
          description: |-
            Whether to allow sites to register Service workers. Defaults to `'allow'`.
            - `'allow'`: [Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) can be
              registered.
            - `'block'`: Playwright will block all registration of Service Workers.
        # storageState?: string|{
        strictSelectors:
          type: boolean
          description: |-
            If set to true, enables strict selectors mode for this context. In the strict selectors mode all operations on
            selectors that imply single target DOM element will throw when more than one element matches the selector. This
            option does not affect any Locator APIs (Locators are always strict). Defaults to `false`. See {@link Locator} to
            learn more about the strict mode.
        timezoneId:
          type: string
          description: |-
            Changes the timezone of the context. See
            [ICU's metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)
            for a list of supported timezone IDs. Defaults to the system timezone.
        userAgent:
          type: string
          description: |-
            Specific user agent to use in this context.
        viewport:
          type: object
          properties:
            width:
              type: number
              description: |-
                page width in pixels.
            height:
              type: number
              description: |-
                page height in pixels.
          required:
            - width
            - height
          description: |-
            Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. Use `null` to disable the consistent
            viewport emulation. Learn more about [viewport emulation](https://playwright.dev/docs/emulation#viewport).

            **NOTE** The `null` value opts out from the default presets, makes viewport depend on the host window size defined
            by the operating system. It makes the execution of the tests non-deterministic.

    ScreenshotRequestOptionsClip:
      type: object
      properties:
        x:
          type: number
          description: x-coordinate of top-left corner of clip area
        y:
          type: number
          description: y-coordinate of top-left corner of clip area
        width:
          type: number
          description: width of clipping area
        height:
          type: number
          description: height of clipping area
      required:
        - x
        - y
        - width
        - height
    ScreenshotRequestOptions:
      type: object
      properties:
        animations:
          type: string
          enum: ["disabled", "allow"]
          description: |-
            When set to `"disabled"`, stops CSS animations, CSS transitions and Web Animations. Animations get different
            treatment depending on their duration:
            - finite animations are fast-forwarded to completion, so they'll fire `transitionend` event.
            - infinite animations are canceled to initial state, and then played over after the screenshot.

            Defaults to `"allow"` that leaves animations untouched.
          default: "allow"
        caret:
          type: string
          enum: ["hide", "initial"]
          description: |-
            When set to `"hide"`, screenshot will hide text caret. When set to `"initial"`, text caret behavior will not be
            changed.  Defaults to `"hide"`.
          default: "hide"
        clip:
          $ref: "#/components/schemas/ScreenshotRequestOptionsClip"
          description: An object which specifies clipping of the resulting image.
        fullPage:
          type: boolean
          description: |-
            When true, takes a screenshot of the full scrollable page, instead of the currently visible viewport. Defaults to
            `false`.
          default: false
        # mask
        maskColor:
          type: string
          description: |-
            Specify the color of the overlay box for masked elements, in
            [CSS color format](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value). Default color is pink `#FF00FF`.
        omitBackground:
          type: boolean
          description: |-
            Hides default white background and allows capturing screenshots with transparency. Not applicable to `jpeg` images.
            Defaults to `false`.
          default: false
        path:
          type: string
          description: |-
            The file path to save the image to. The screenshot type will be inferred from file extension. If `path` is a
            relative path, then it is resolved relative to the current working directory. If no path is provided, the image
            won't be saved to the disk.
        quality:
          type: number
          description: |-
            The quality of the image, between 0-100. Not applicable to `png` images.
        scale:
          type: string
          enum: ["css", "device"]
          description: |-
            When set to `"css"`, screenshot will have a single pixel per each css pixel on the page. For high-dpi devices, this
            will keep screenshots small. Using `"device"` option will produce a single pixel per each device pixel, so
            screenshots of high-dpi devices will be twice as large or even larger.

            Defaults to `"device"`.
          default: "device"
        timeout:
          type: number
          description: |-
            Maximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`
            option in the config, or by using the
            [browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)
            or [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods.
        type:
          type: string
          enum: ["png", "jpeg"]
          description: |-
            Specify screenshot type, defaults to `png`.
          default: "png"
    PdfRequestOptions:
      type: object
      properties:
        displayHeaderFooter:
          type: boolean
          description: |-
            Display header and footer. Defaults to `false`.
          default: false
        footerTemplate:
          type: string
          description: |-
            HTML template for the print footer. Should use the same format as the `headerTemplate`.
        format:
          type: string
          description: |-
            Paper format. If set, takes priority over `width` or `height` options. Defaults to 'Letter'.
          default: "Letter"
        headerTemplate:
          type: string
          description: |-
            HTML template for the print header. Should be valid HTML markup with following classes used to inject printing
            values into them:
            - `'date'` formatted print date
            - `'title'` document title
            - `'url'` document location
            - `'pageNumber'` current page number
            - `'totalPages'` total pages in the document
        height:
          oneOf:
            - type: string
            - type: number
          description: |-
            Paper height, accepts values labeled with units.
        landscape:
          type: boolean
          description: |-
            Paper orientation. Defaults to `false`.
          default: false
        margin:
          description: |-
            Paper margins, defaults to none.
          type: object
          properties:
            top:
              oneOf:
                - type: string
                - type: number
              description: |-
                Top margin, accepts values labeled with units. Defaults to `0`.
              default: 0
            right:
              oneOf:
                - type: string
                - type: number
              description: |-
                Right margin, accepts values labeled with units. Defaults to `0`.
              default: 0
            bottom:
              oneOf:
                - type: string
                - type: number
              description: |-
                Bottom margin, accepts values labeled with units. Defaults to `0`.
              default: 0
            left:
              oneOf:
                - type: string
                - type: number
              description: |-
                Left margin, accepts values labeled with units. Defaults to `0`.
              default: 0
        pageRanges:
          type: string
          description: |-
            Paper ranges to print, e.g., '1-5, 8, 11-13'. Defaults to the empty string, which means print all pages.
        path:
          type: string
          description: |-
            The file path to save the PDF to. If `path` is a relative path, then it is resolved relative to the current working
            directory. If no path is provided, the PDF won't be saved to the disk.
        preferCSSPageSize:
          type: boolean
          description: |-
            Give any CSS `@page` size declared in the page priority over what is declared in `width` and `height` or `format`
            options. Defaults to `false`, which will scale the content to fit the paper size.
        printBackground:
          type: boolean
          description: |-
            Print background graphics. Defaults to `false`.
          default: false
        scale:
          type: number
          description: |-
            Scale of the webpage rendering. Defaults to `1`. Scale amount must be between 0.1 and 2.
          default: 1
        width:
          oneOf:
            - type: string
            - type: number
          description: |-
            Paper width, accepts values labeled with units.
    CustomOptionsBlockResourceResourceType:
      type: string
      enum:
        - "document"
        - "stylesheet"
        - "image"
        - "media"
        - "font"
        - "script"
        - "texttrack"
        - "xhr"
        - "fetch"
        - "eventsource"
        - "websocket"
        - "manifest"
        - "other"
    CustomOptionsBlockResource:
      type: object
      properties:
        url:
          type: string
        resourceType:
          type: array
          items:
            $ref: "#/components/schemas/CustomOptionsBlockResourceResourceType"
      required:
        - url
        - resourceType
    CustomOptionsAutoScroll:
      type: object
      properties:
        enable:
          type: boolean
        frequency:
          type: number
          default: 100
        timing:
          type: number
          default: 100
      required:
        - enable
    CustomOptions:
      type: object
      properties:
        pageDefaultTimeout:
          type: number
          description: |-
            This setting will change the default maximum time for all the methods accepting `timeout` option.

            **NOTE**
            [page.setDefaultNavigationTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-navigation-timeout)
            takes priority over
            [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout).

            [Maximum time in milliseconds]
        pageDefaultNavigationTimeout:
          type: number
          description: |-
            This setting will change the default maximum navigation time for the following methods and related shortcuts:
            - [page.goBack([options])](https://playwright.dev/docs/api/class-page#page-go-back)
            - [page.goForward([options])](https://playwright.dev/docs/api/class-page#page-go-forward)
            - [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto)
            - [page.reload([options])](https://playwright.dev/docs/api/class-page#page-reload)
            - [page.setContent(html[, options])](https://playwright.dev/docs/api/class-page#page-set-content)
            - [page.waitForNavigation([options])](https://playwright.dev/docs/api/class-page#page-wait-for-navigation)
            - [page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url)

            **NOTE**
            [page.setDefaultNavigationTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-navigation-timeout)
            takes priority over
            [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout),
            [browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)
            and
            [browserContext.setDefaultNavigationTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout).

            [Maximum time in milliseconds]
        checkIsGoToOk:
          type: boolean
        autoScroll:
          $ref: "#/components/schemas/CustomOptionsAutoScroll"
        blockResource:
          type: array
          items:
            $ref: "#/components/schemas/CustomOptionsBlockResource"
    ScreenshotRequest:
      type: object
      properties:
        customOptions:
          $ref: "#/components/schemas/CustomOptions"
        gotoOptions:
          $ref: "#/components/schemas/GotoOptions"
        options:
          $ref: "#/components/schemas/ScreenshotRequestOptions"
        contextOptions:
          $ref: "#/components/schemas/ContextOptions"
        url:
          type: string
      required:
        - url
    ContentRequest:
      type: object
      properties:
        customOptions:
          $ref: "#/components/schemas/CustomOptions"
        gotoOptions:
          $ref: "#/components/schemas/GotoOptions"
        contextOptions:
          $ref: "#/components/schemas/ContextOptions"
        url:
          type: string
      required:
        - url
    PdfRequest:
      type: object
      properties:
        customOptions:
          $ref: "#/components/schemas/CustomOptions"
        gotoOptions:
          $ref: "#/components/schemas/GotoOptions"
        contextOptions:
          $ref: "#/components/schemas/ContextOptions"
        options:
          $ref: "#/components/schemas/PdfRequestOptions"
        url:
          type: string
      required:
        - url
    Favicon:
      type: object
      properties:
        href:
          type: string
        size:
          type: object
          properties:
            width:
              type: number
            height:
              type: number
          required:
            - width
            - height
      required:
        - href
        - size
    ContentExtraResponse:
      type: object
      nullable: true
      properties:
        raw:
          type: string
        sanitized:
          type: string
        readability:
          type: object
          nullable: true
          properties:
            title:
              type: string
              description: article title
            content:
              type: string
              description: HTML string of processed article content
            textContent:
              type: string
              description: text content of the article, with all the HTML tags removed
            length:
              type: number
              description: length of an article, in characters
            excerpt:
              type: string
              description: article description, or short excerpt from the content
            byline:
              type: string
              description: author metadata
            dir:
              type: string
              description: content direction
            siteName:
              type: string
              description: name of the site
            lang:
              type: string
              description: content language
          required:
            - title
            - content
            - textContent
            - length
            - excerpt
            - byline
            - dir
            - siteName
            - lang
        favicon:
          type: object
          properties:
            list:
              type: array
              items:
                $ref: "#/components/schemas/Favicon"
            largest:
              $ref: "#/components/schemas/Favicon"
              nullable: true
          required:
            - list
            - largest
        opengraph:
          type: object
          properties:
            title:
              type: string
            type:
              type: array
              items:
                type: string
            image:
              type: string
            url:
              type: string
            determiner:
              type: string
            siteName:
              type: string
            audio:
              type: array
              items:
                type: string
            video:
              type: array
              items:
                type: string
            description:
              type: string
            locale:
              type: string
            localeAlternate:
              type: array
              items:
                type: string
          required:
            - title
            - type
            - image
            - url
            - determiner
            - siteName
            - audio
            - video
            - description
            - locale
            - localeAlternate
      required:
        - raw
        - sanitized
        - readability
        - favicon
        - opengraph
    InfoResponse:
      type: object
      properties:
        maxQueueLength:
          type: number
        maxParallelSessions:
          type: number
        queueLength:
          type: number
        isAddAllowed:
          type: boolean
        version:
          type: object
          properties:
            npm:
              type: object
              properties:
                "@mozilla/readability": { type: string }
                adblock-rs: { type: string }
                dompurify: { type: string }
                playwright: { type: string }
                playwright-core: { type: string }
                playwright-extra: { type: string }
                puppeteer: { type: string }
                puppeteer-extra-plugin-stealth: { type: string }
              required:
                - "@mozilla/readability"
                - adblock-rs
                - dompurify
                - playwright
                - playwright-core
                - playwright-extra
                - puppeteer
                - puppeteer-extra-plugin-stealth
            browser:
              type: object
              properties:
                chromium: { type: string }
                firefox: { type: string }
                webkit: { type: string }
              required:
                - chromium
                - firefox
                - webkit
          required:
            - npm
            - browser
      required:
        - maxQueueLength
        - maxParallelSessions
        - queueLength
        - isAddAllowed
        - version
    Device:
      type: object
      properties:
        name:
          type: string
        userAgent:
          type: string
        viewport:
          type: object
          properties:
            width:
              type: number
            height:
              type: number
          required:
            - width
            - height
        deviceScaleFactor:
          type: number
        isMobile:
          type: boolean
        hasTouch:
          type: boolean
        defaultBrowserType:
          type: string
          enum: ["chromium", "firefox", "webkit"]
      required:
        - name
        - userAgent
        - viewport
        - deviceScaleFactor
        - isMobile
        - hasTouch
        - defaultBrowserType

  securitySchemes:
    token:
      type: apiKey
      name: token
      in: query
